plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
    id 'signing'
}

group 'org.semanticpie'
version '0.7.1'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'jakarta.websocket:jakarta.websocket-api:2.0.0'
    implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:2.0.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

jar {
    from {
        configurations.runtimeClasspath.filter { it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jacocoTestReport {
    dependsOn test

    reports {
        csv.enabled true
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        gpr(MavenPublication) {
            groupId 'org.semanticpie'
            artifactId 'jmantic'
            version '0.7.1'
            from components.java
            pom {
                name = 'JMantic'
                description = 'JMantic is a java library for working with the sc-memory of the OSTIS project over the websocket protocol'
                url = 'https://github.com/semantic-pie/JMantic'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'artrayme'
                        name = 'Artemy V'
                        email = 'artrayme@protonmail.com'
                    }
                }
                scm {
                    developerConnection = 'scm:git:https://github.com/semantic-pie/JMantic.git'
                    url = 'https://github.com/semantic-pie/JMantic'
                }
            }
        }

        mavenJava(MavenPublication) {
            groupId 'org.semanticpie'
            artifactId 'jmantic'
            version '0.7.1'
            from components.java
            pom {
                name = 'JMantic'
                description = 'JMantic is a java library for working with the sc-memory of the OSTIS project over the websocket protocol'
                url = 'https://github.com/semantic-pie/JMantic'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'artrayme'
                        name = 'Artemy V'
                        email = 'artrayme@protonmail.com'
                    }
                }
                scm {
                    developerConnection = 'scm:git:https://github.com/semantic-pie/JMantic.git'
                    url = 'https://github.com/semantic-pie/JMantic'
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/semantic-pie/jmantic")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

signing {
    def signingKey = System.getenv("GPG_KEY")
    def signingPassword = System.getenv("GPG_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
    sign publishing.publications.gpr
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
